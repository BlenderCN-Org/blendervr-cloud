uniform sampler2D color_map;
uniform sampler2D depth_map;

uniform float width;
uniform float height;
uniform float near_clipping, far_clipping;
uniform float point_size;
uniform float z_offset;
uniform vec3 location;

varying vec3 color;
varying float depth;

const float XtoZ = 1.11146; // tan( 1.0144686 / 2.0 ) * 2.0;
const float YtoZ = 0.83359; // tan( 0.7898090 / 2.0 ) * 2.0;

const float scale = 3.0;

void main()
{
    vec4 position = gl_Vertex;
    vec2 uv = vec2(position.y / width, position.z / height);

    vec4 depth_raw = texture2D(depth_map, uv);
    depth = (depth_raw.r + depth_raw.g + depth_raw.b) / 3.0;
    color = texture2D(color_map, uv).rgb;

    float x = ( 1.0 - depth ) * (far_clipping - near_clipping) + near_clipping;
    x -= near_clipping;

    position.xyz *= scale / width;
    position.xyz += location;

    vec4 pos = vec4(
        position.x - x,
        position.y,
        position.z,
        1.0);

    gl_PointSize = point_size;
    gl_Position = gl_ProjectionMatrix * gl_ModelViewMatrix * pos;
}
