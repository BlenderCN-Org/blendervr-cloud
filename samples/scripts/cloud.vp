uniform sampler2D color_map;
uniform sampler2D depth_map;

uniform float camera_shift;

uniform float width;
uniform float height;
uniform float near_clipping, far_clipping;
uniform float point_size;
uniform float z_offset;
uniform vec3 location;

varying vec3 color;
varying float depth_normal;

const vec2 range_x = vec2(-6.0, 6.0);
const vec2 range_y = vec2(-5.0, 5.0);
const vec2 range_z = vec2(0.5, 8.0);

void main()
{
    vec4 position = gl_Vertex;
    vec2 uv = vec2(position.y / width, position.z / height);
    color = texture2D(color_map, uv).rgb;

    vec3 xyz = texture2D(depth_map, uv).rgb;
    depth_normal = xyz.z;

    float depth = near_clipping + depth_normal * (far_clipping - near_clipping);

    position.y = -(range_x[0] + (xyz.x * (range_x[1] - range_x[0])));
    position.z =  (range_y[0] + (xyz.y * (range_y[1] - range_y[0])));
    position.x = -(range_z[0] + (xyz.z * (range_z[1] - range_z[0])));

    position.xyz += location;

    vec4 pos = vec4(
        position.x,
        position.y,
        position.z,
        1.0);

    gl_PointSize = point_size;
    gl_Position = gl_ProjectionMatrix * gl_ModelViewMatrix * pos;
}
